Description: >
  This template uses AWS CodeBuild and AWS CodePipeline to
  achieve continuous deployment of source code from a GitHub repository via a
  Java Gradle build and then creates a Docker container 
  to deploy on an Amazon EC2 Container Service cluster.


Parameters:
  GitHubUser:
    Type: String
    Description: Your username on GitHub.

  GitHubRepo:
    Type: String
    Default: TechemyLtd/bnc-market-cache-service
    Description: The repo name of the sample service.

  GitHubBranch:
    Type: String
    Default: master
    Description: The branch of the repo to continuously deploy.

  GitHubTemplate:
    Type: String
    Default: alphafoobar/ecs-refarch-continuous-deployment
    Description: The repo name for the templates.

  GitHubTemplateBranch:
    Type: String
    Default: master
    Description: The branch of the repo for templates.

  GitHubToken:
    Type: String
    Description: >
      Token for the user specified above. (https://github.com/settings/tokens)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      GitHubUser:
        default: "User"
      GitHubRepo:
        default: "Repo"
      GitHubBranch:
        default: "Branch"
      GitHubToken:
        default: "Personal Access Token"
      GitHubTemplate:
        default: "Template Repo"
      GitHubTemplateBranch:
        default: "Template Branch"

    ParameterGroups:
      - Label:
          default: Template Configuration
        Parameters:
          - GitHubTemplate
          - GitHubTemplateBranch
      - Label:
          default: GitHub Configuration
        Parameters:
          - GitHubRepo
          - GitHubBranch
          - GitHubUser
          - GitHubToken

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://raw.githubusercontent.com/${GitHubTemplate}/${GitHubTemplateBranch}/templates/ecs-cluster.yaml
      Parameters:
        SourceSecurityGroup: !GetAtt LoadBalancer.Outputs.SecurityGroup
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  DeploymentPipeline:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://raw.githubusercontent.com/${GitHubTemplate}/${GitHubTemplateBranch}/templates/deployment-pipeline.yaml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        GitHubUser: !Ref GitHubUser
        GitHubToken: !Ref GitHubToken
        GitHubRepo: !Ref GitHubRepo
        GitHubBranch: !Ref GitHubBranch
        TargetGroup: !GetAtt LoadBalancer.Outputs.TargetGroup
        GitHubTemplate: !Ref GitHubTemplate
        GitHubBranchTemplate: !Ref GitHubBranchTemplate

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://raw.githubusercontent.com/${GitHubTemplate}/${GitHubTemplateBranch}/templates/load-balancer.yaml
      Parameters:
        Subnets: !GetAtt VPC.Outputs.Subnets
        VpcId: !GetAtt VPC.Outputs.VpcId

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://raw.githubusercontent.com/${GitHubTemplate}/${GitHubTemplateBranch}/templates/vpc.yaml
      Parameters:
        Name: !Ref AWS::StackName
        VpcCIDR: 10.215.0.0/16
        Subnet1CIDR: 10.215.10.0/24
        Subnet2CIDR: 10.215.20.0/24


Outputs:
  ServiceUrl:
    Description: The sample service that is being continuously deployed.
    Value: !GetAtt LoadBalancer.Outputs.ServiceUrl

  PipelineUrl:
    Description: The continuous deployment pipeline in the AWS Management Console.
    Value: !GetAtt DeploymentPipeline.Outputs.PipelineUrl
